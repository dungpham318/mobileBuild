{"version":3,"sources":["config.js","component/Header.js","component/AppItem.js","view/Home.js","component/DetailTable.js","view/AppDetail.js","RouteClient.js","App.js","serviceWorker.js","index.js"],"names":["exports","IPLOCAL","Header","style","styles","root","href","title","Component","width","borderBottom","marginTop","color","fontSize","AppItem","Button","button","variant","this","props","itemRoute","Image","src","imageUrl","icon","thumbnail","appName","image","fontWeight","Home","componentDidMount","a","getApplicationList","fetch","config","method","mode","headers","then","response","json","data","forEach","setState","state","_id","name","iconURL","catch","err","console","log","listApplication","map","index","Col","lg","md","xs","key","Container","Row","DetailTable","tableData","itemList","version","created_at","android","urlIos","Table","striped","bordered","hover","AppDetail","isFetching","getTableData","application","ios","Breadcrumb","Item","active","marginRight","rounded","g","RouteClient","appId","eLearning","iconUrl","mobile4Fiser","BrowserRouter","Switch","Route","exact","path","render","App","className","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4347f3d.chunk.js","sourcesContent":["exports.IPLOCAL = '118.69.123.51:5000/mobilebuild'\n","import React, { Component } from 'react'\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <div style={styles.root}>\n        <a href='/'>\n          <p style={styles.title}>TDC Mobile Build</p>\n        </a>\n      </div>\n    )\n  }\n}\n\nexport default Header\n\nconst styles = {\n  root: {\n    width: '100%',\n    borderBottom: '0.5px solid #eff0ff',\n    marginTop: '10px'\n  },\n  title: {\n    color: '#f07933',\n    fontSize: '2rem'\n  }\n}","import React, { Component } from 'react'\nimport {\n  Button,\n  Image,\n} from 'react-bootstrap'\n\nclass AppItem extends Component {\n\n  render() {\n    return (\n      <Button\n        style={styles.button}\n        variant=\"light\"\n        href={this.props.itemRoute}>\n        <Image\n          src={this.props.imageUrl}\n          style={styles.icon}\n          thumbnail />\n        <p style={styles.appName}>\n          {this.props.appName}\n        </p>\n      </Button>\n\n    )\n  }\n\n}\n\nexport default AppItem\n\nconst styles = {\n  button: {\n  },\n  image: {\n  },\n  icon: {\n    marginTop: '20px'\n  },\n  appName: {\n    marginTop: '20px',\n    fontWeight: 'bold',\n    fontSize: '1.2rem',\n    color: '#245'\n  }\n\n}","import React, { Component } from 'react'\nimport Header from '../component/Header'\nimport AppItem from '../component/AppItem'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport config from '../config'\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.getApplicationList()\n  }\n\n  getApplicationList = async () => {\n    await fetch(`http://${config.IPLOCAL}:5003/api/getApplicationList`, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        data.data.forEach(data => {\n          this.setState({\n            data: [\n              ...this.state.data,\n              { _id: data._id, name: data.name, iconURL: data.iconURL }\n            ]\n          })\n        })\n\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    const listApplication = this.state.data.map((data, index) =>\n      <Col lg={2} md={2} xs={6} key={index}>\n        <AppItem\n          imageUrl={data.iconURL}\n          appName={data.name}\n          itemRoute={data.name}\n        />\n      </Col>\n    )\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Header />\n          </Col>\n        </Row>\n        <Row style={{ marginTop: '20px' }}>\n          {listApplication}\n          {/* {\n            this.state.data.map(data => {\n              <Col lg={2} md={2} xs={6}>\n                <AppItem\n                  imageUrl={data.iconURL}\n                  appName={data.name}\n                  itemRoute={data.name}\n                />\n              </Col>\n            })\n          } */}\n          {/* <Col lg={2} md={2} xs={6}>\n            <AppItem\n              imageUrl='https://www.dropbox.com/s/uuj0kgd06vezgvz/eLeaning_white_ios.png?dl=1'\n              appName='eLearning'\n              itemRoute='/eLearning'\n            />\n          </Col>\n          <Col lg={2} md={2} xs={6}>\n            <AppItem\n              imageUrl='https://www.dropbox.com/s/8e5yspfk2hibi9f/FIS-INSIGHT-002.png?dl=1'\n              appName='Mobile4Fiser'\n              itemRoute='/mobile4Fiser'\n            />\n          </Col> */}\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Home","import React, { Component } from 'react'\nimport {\n  Table,\n  Button\n} from 'react-bootstrap'\n\nclass DetailTable extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: this.props.tableData\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState({ data: this.props.tableData })\n\n  }\n\n  render() {\n    const itemList = this.state.data.map((data, index) =>\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{data.version}</td>\n        <td>{data.created_at}</td>\n        <td>\n          <Button variant=\"link\" href={data.android}>Download</Button>\n        </td>\n        <td>\n          <Button\n            variant=\"link\"\n            href={data.urlIos}\n          >\n            Download\n          </Button>\n        </td>\n      </tr>\n    )\n    return (\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Version</th>\n            <th>Date</th>\n            <th>Android</th>\n            <th>Ios</th>\n          </tr>\n        </thead>\n        <tbody>\n          {itemList}\n        </tbody>\n      </Table>\n    )\n  }\n\n}\n\nexport default DetailTable","import React, { Component } from 'react'\nimport {\n  Container,\n  Row,\n  Col,\n  Breadcrumb,\n  Image\n} from 'react-bootstrap'\nimport Header from '../component/Header'\nimport DetailTable from '../component/DetailTable'\nimport config from '../config'\n\nclass AppDetail extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      isFetching: false\n    }\n  }\n\n  componentDidMount = async () => {\n    this.setState({ isFetching: true })\n    await this.getTableData()\n  }\n\n  getTableData = async () => {\n    await fetch(`http://${config.IPLOCAL}:5003/api/getBuildList?applicationId=${this.props.application._id}`, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        data.data.forEach(data => {\n          this.setState({\n            data: [\n              ...this.state.data,\n              {\n                _id: data._id,\n                version: data.version,\n                ios: data.ios,\n                android: data.android,\n                created_at: data.created_at,\n                urlIos: `itms-services://?action=download-manifest&url=${data.ios}`\n              }\n            ]\n          })\n        })\n\n      })\n      .then(() => {\n        this.setState({ isFetching: false })\n\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Header />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Breadcrumb>\n              <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n              <Breadcrumb.Item active href=\"/eLearning\">\n                <Image\n                  src='https://www.dropbox.com/s/uuj0kgd06vezgvz/eLeaning_white_ios.png?dl=1'\n                  style={{ width: '20px', marginRight: '5px' }}\n                  rounded />\n                eLearning\n              </Breadcrumb.Item>\n            </Breadcrumb>\n          </Col>\n        </Row>\n        {\n          this.state.isFetching === false &&\n          <Row>\n            <Col g={12} md={12} xs={12}>\n              <DetailTable tableData={this.state.data} />\n            </Col>\n          </Row>\n        }\n\n      </Container>\n    )\n  }\n\n}\n\nexport default AppDetail","import React, { Component } from 'react';\n// import CircularIndeterminate from './component/Progress'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './view/Home'\nimport AppDetail from './view/AppDetail'\n\nclass RouteClient extends Component {\n\n  render() {\n    const appId = {\n      eLearning: {\n        _id: \"5ddac521994348159c4d2d73\",\n        name: \"eLearning\",\n        iconUrl: \"https://www.dropbox.com/s/uuj0kgd06vezgvz/eLeaning_white_ios.png?dl=1\"\n      },\n      mobile4Fiser: {\n        _id: \"5ddac521994348159c4d2d72\",\n        name: \"mobile4Fiser\",\n        iconUrl: \"https://www.dropbox.com/s/8e5yspfk2hibi9f/FIS-INSIGHT-002.png?dl=1\"\n      }\n    }\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return <Home />\n          }} />\n          <Route path=\"/eLearning\" render={() => {\n            return <AppDetail application={appId.eLearning} />\n          }} />\n          <Route path=\"/mobile4Fiser\" render={() => {\n            return <AppDetail application={appId.mobile4Fiser} />\n          }} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default RouteClient","import React from 'react';\nimport './App.css';\nimport RouteClient from './RouteClient'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RouteClient />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}